#####################################################################################
# Program : aws_instance_manage.yml
# Creator : Lee Sang Hyoung
# Syntax  : ansible-playbook aws_instance_manage.yml -t start
#         : ansible-playbook aws_instance_manage.yml -t beginprocess
#         : ansible-playbook aws_instance_manage.yml -t stop
#####################################################################################
---

# Start a few existing instances, run some tasks
# and stop the instances

- name: Start Instances
  hosts: localhost
  gather_facts: false
  connection: local
   
  vars:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    instance_id: 'i-0d9041f61e7e989e7'
    region: 'ap-northeast-2'

  tasks:
    ###################################################################
    #
    # Start Instance 
    #
    ###################################################################
    - name: Start EC2 Instance
      ec2_instance:
        instance_ids: "{{ instance_id }}"
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_subnet_id: 'subnet-0d3e432acb1456a3a'
        state: running
      #register: ec2_result
      tags: start 

    - name: Get EC2 Instance IP Address
      ec2_instance_info:
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        instance_ids: "{{ instance_id }}"
      register: ec2_info
      tags: beginprocess 

    - name: Print Log 
      debug:
        msg: "public_ip: {{ ec2_info.instances[0].public_ip_address }}"
      when: ec2_info.instances[0].public_ip_address is defined
      tags: start 

    - name: Wait for SSH to be available
      wait_for:
        host: "{{ item.public_ip_address }}"
        port: 22
        delay: 60
        timeout: 600
      with_items: "{{ ec2_instance.instances }}"
      when: ec2_info.instances[0].public_ip_address is defined
      tags: beginprocess

    - name: Add EC2 instance to known hosts
      known_hosts:
        name: "{{ item.public_ip_address }}"
        key: "{{ item.key_name }}"
      with_items: "{{ ec2_instance.instances }}"
      when: ec2_info.instances[0].public_ip_address is defined
      tags: beginprocess

#- name: Run shell commands on EC2 instance
# hosts: "{{ item.public_ip_address }}"
# become: yes
# become_user: ec2-user  # Change to appropriate user for your AMI
# gather_facts: yes
# tasks:
#   - name: Execute command 1
#     command: echo "Command 1 executed"
#     when: ec2_info.instances[0].public_ip_address is defined
#     tags: beginprocess

    - name: Display Command Result
      debug:
        var: command_result
      when: ec2_info.instances[0].public_ip_address is defined
      tags: beginprocess


    ###################################################################
    #
    # Stop Instance 
    #
    ###################################################################
    - name: Stop EC2 Instance
      ec2_instance:
        instance_ids: "{{ instance_id }}"
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_subnet_id: 'subnet-0d3e432acb1456a3a'
        state: stopped
      #register: ec2_result
      tags: stop 

    - name: Show EC2 Result
      debug:
        var: ec2_result
      tags: 
        - start 
        - stop 
             

