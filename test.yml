---
- hosts: lcia-dnawex01
  remote_user: admin
  become_user: esadmin
  become: true
  become_method: sudo
  tags:
    - WSTOP

  tasks:
    ############################################################
    # WEX Searcher 종료
    ############################################################
    - name: "WEX Searcher Stop "
      shell: |
        . /opt/IBM/es/nodeinfo/esprofile
        esadmin stopSearch -cid Develop
      ignore_errors: yes
      register: ansibleresult
      async: 1200
      poll: 0

    - name: "Check on WEX Searcher Stop"
      async_status: jid={{ ansibleresult.ansible_job_id }}
      #ignore_errors: True
      register: job_result
      until: job_result.finished
      retries: 120
      delay: 10

    - name: "WEX Searcher Stop status"
      debug:
        msg: "{{ job_result.stdout }}"

- hosts: lcia-dnawex01
  remote_user: admin
  become_user: esadmin
  become: true
  become_method: sudo
  tags:
    - WSTART

  tasks:
    ############################
    # Search 시작
    ############################
    - name: "▶ 10-3. Search 시작"
      shell: |
        . /opt/IBM/es/nodeinfo/esprofile
        esadmin startSearch -cid Develop
      ignore_errors: yes
      register: ansibleresult
      async: 1200
      poll: 0

    - name: "▶ 10-3. Search 진행중"
      async_status: jid={{ ansibleresult.ansible_job_id }}
      ignore_errors: True
      register: job_result
      until: job_result.finished
      retries: 120
      delay: 10

    - name: "▶ 10-3. Search 시작 결과"
      debug:
        msg:
          - "{{ job_result.stdout }}"
          - "Ѱ {{ lookup('pipe','date +%Y-%m-%d/%H:%M:%S') }}"

#############################################################
# 작업내용 : WEX 불필요 프로세스 종료
# Woking Server : WEX 01,02,03번
#############################################################
- hosts: lcia-dnawex01,lcia-dnawex02,lcia-dnawex03
  remote_user: admin
  become: yes
  become_user: esadmin
  become_method: sudo
  tags:
    - WKILL
  tasks:
    - name: "WEX Dummy Process Kill 1"
      shell: |
        . /opt/IBM/es/nodeinfo/esprofile
        esadmin check | grep Develop.searcher.node2.node1 | awk '{print $3}'
      register: statuscheck
      ignore_errors: yes
      until:
        statuscheck.stdout.find("-") == -1
      retries: 10
      delay: 3
      when: inventory_hostname == "lcia-dnawex011"

    - name: "WEX Dummy Process Kill 1 "
      shell: |
        . /opt/IBM/es/nodeinfo/esprofile
        kill -9 `esadmin check | grep Develop.searcher.node2.node1 | awk '{print $3}'`
      ignore_errors: yes
      when: inventory_hostname == "lcia-dnawex011"

    - name: "WEX Dummy Process Kill 2 "
      shell: |
        . /opt/IBM/es/nodeinfo/esprofile
        esadmin check | grep Develop.searcher.node3.node2 | awk '{print $3}'
      register: statuscheck
      ignore_errors: yes
      until:
        statuscheck.stdout.find("-") == -1
      retries: 10
      delay: 3
      when: inventory_hostname == "lcia-dnawex02"

    - name: "WEX Dummy Process Kill 2 "
      shell: |
        . /opt/IBM/es/nodeinfo/esprofile
        kill -9 `esadmin check | grep Develop.searcher.node3.node2 | awk '{print $3}'`
      ignore_errors: yes
      when: inventory_hostname == "lcia-dnawex02"

    - name: "WEX Dummy Process Kill 3 "
      shell: |
        . /opt/IBM/es/nodeinfo/esprofile
        esadmin check | grep Develop.searcher.node1.node3 | awk '{print $3}'
      register: statuscheck
      ignore_errors: yes
      until:
        statuscheck.stdout.find("-") == -1
      retries: 10
      delay: 3
      when: inventory_hostname == "lcia-dnawex03"

    - name: "WEX Dummy Process Kill 3 "
      shell: |
        . /opt/IBM/es/nodeinfo/esprofile
        kill -9 `esadmin check | grep Develop.searcher.node1.node3 | awk '{print $3}'`
      ignore_errors: yes
      when: inventory_hostname == "lcia-dnawex03"


#    - name: "▶ 10-1. Passit Export Data - 파일네임 변경(MOVE)"
#      file:
#        command: mv /home/esadmin/esdata/export/
#        path: "{{ item.path }}"
#        state: absent
#      with_items: "{{ files_to_change_name.files }}"



#- hosts: lcia-dnawex01,lcia-dnawex02,lcia-dnawex03
#  remote_user: admin
#  become: yes
#  become_user: esadmin
#  become_method: sudo
#  tasks:
#    - name: "WEX TEST 1"
#      shell: |
#        . /opt/IBM/es/nodeinfo/esprofile
#        esadmin check | grep Develop.searcher.node2.node1 | awk '{print $3}'
#      register: statuscheck
#      ignore_errors: yes
#      until:
#        statuscheck.stdout.find("-") == -1
#      retries: 2
#      delay: 3
#      when: inventory_hostname == "lcia-dnawex01"

#    - name: "WEX TEST 2 "
#      shell: |
#        . /opt/IBM/es/nodeinfo/esprofile
#        kill -9 `esadmin check | grep Develop.searcher.node2.node1 | awk '{print $3}'`
#      register: statuscheck
#      ignore_errors: yes
#      when: inventory_hostname == "lcia-dnawex01"

#    - name: "WEX TEST 1"
#      shell: |
#        . /opt/IBM/es/nodeinfo/esprofile
#        esadmin check | grep Develop.searcher.node3.node2 | awk '{print $3}'
#      register: statuscheck
#      ignore_errors: yes
#      until:
#        statuscheck.stdout.find("-") == -1
#      retries: 1
#      delay: 3
#      when: inventory_hostname == "lcia-dnawex02"

#    - name: "WEX TEST 2 "
#      shell: |
#        . /opt/IBM/es/nodeinfo/esprofile
#        kill -9 `esadmin check | grep Develop.searcher.node3.node2 | awk '{print $3}'`
#      register: statuscheck
#      ignore_errors: yes
#      when: inventory_hostname == "lcia-dnawex02"

#    - name: "WEX TEST 1"
#      shell: |
#        . /opt/IBM/es/nodeinfo/esprofile
#        esadmin check | grep Develop.searcher.node1.node3 | awk '{print $3}'
#      register: statuscheck
#      ignore_errors: yes
#      until:
#        statuscheck.stdout.find("-") == -1
#      retries: 1
#      delay: 3
#      when: inventory_hostname == "lcia-dnawex03"

#    - name: "WEX TEST 2 "
#      shell: |
#        . /opt/IBM/es/nodeinfo/esprofile
#        kill -9 `esadmin check | grep Develop.searcher.node1.node3 | awk '{print $3}'`
#      register: statuscheck
#      ignore_errors: yes
#      when: inventory_hostname == "lcia-dnawex03"


    ############################################################
    # WEX VM Wait for system to become reachable
    ############################################################
#    - name: Wait 600 seconds, but only start checking after 2 seconds
#      wait_for_connection:
#        delay: 2
#        timeout: 600

#    - name: VM Gather facts for first time
#      setup:
#      register: job_result

#    - name: WEX VM Start 후 접속상태
#      debug:
#        msg:
#          - "{{ job_result.ansible_facts.ansible_fqdn }}"
#          - "{{ job_result.ansible_facts.ansible_hostname }}"
#          - "{{ job_result.ansible_facts.ansible_env.SSH_CONNECTION }}"
#          - "Ψ {{ lookup('pipe','date +%Y-%m-%d/%H:%M:%S') }}"

#- hosts: wexnode
#  remote_user: admin
#  become: yes
#  become_user: esadmin
#  become_method: sudo
#    - name: "PING test"
#      ping: 
#      register: job_result
#      until: job_result.ping is defined and  job_result.ping == "pong"
#      retries: 10
#      delay: 3

#    - name: WEX DATE  
#      debug:
#        msg: 
#          - "{{ job_result.ping }}"
#          - "------------------------------"
#          - "  {{ lookup('pipe','date +%Y-%m-%d/%H:%M:%S') }}"
#          - "------------------------------"


#  when: resetcheck.stdout is defined

#    - name: "WEX DATE TEST"
#      shell: ls -l > /home/esadmin/ansible_wex/test.log
#      register: statuscheck
#
#    - name: WEX DATE  
#      debug:
#        msg: 
#          - "{{ statuscheck.stdout_lines }}"
#          - "------------------------------"
#          - "  {{ lookup('pipe','date +%Y-%m-%d/%H:%M:%S') }}"
#          - "------------------------------"

    #- name: "WEX DATE TEST"
    #  shell: |
    #    . /opt/IBM/es/nodeinfo/esprofile
    #    /home/esadmin/ansible_wex/wex_sessionid_get.py
    #    cat /home/esadmin/ansible_wex/wex_session.dat
    #  register: statuscheck
    #  when: ansible_date_time.month == "05" and ansible_date_time.day == "24"

    #- name: WEX DATE
    #  debug:
    #    msg: "{{ ansible_date_time.month }}  {{ ansible_date_time.day }}  {{ statuscheck.stdout }}  "
    #msg: "{{ '%Y-%m-%d'|strftime((ansible_date_time.epoch|int)-(86400 * 0)) }}"

    #- name: "WEX Crawling status(1)"
    #  shell: |
    #    . /opt/IBM/es/nodeinfo/esprofile
    #    esadmin {{ item | regex_replace('(\.[^.]*)') | string }}.indexservice.node1 getIndexBuildStatusAll &&  > /home/esadmin/ansible_wex/wex_idxstatus.log 
    #    /home/esadmin/ansible_wex/wex_indexbuild_status.py
    #    cat /home/esadmin/ansible_wex/wex_idxstatus.dat
    #  register: statuscheck
    #  ignore_errors: yes
    #  with_items: "{{ 'Main2.JDBC_61740' }}"

    #- pause: seconds=10

    #- name: "WEX Crawling status(2)"
    #  shell: |
    #    . /opt/IBM/es/nodeinfo/esprofile
    #    esadmin {{ item | regex_replace('(\.[^.]*)') | string }}.indexservice.node1 getIndexBuildStatusAll &&  > /home/esadmin/ansible_wex/wex_idxstatus.log 
    #    /home/esadmin/ansible_wex/wex_indexbuild_status.py
    #    cat /home/esadmin/ansible_wex/wex_idxstatus.dat
    #  register: statuscheck
    #  ignore_errors: yes
    #  with_items: "{{ 'Main2.JDBC_61740' }}"

    #- name: WEX Crawling status
    #  debug:
    #    msg: >
    #      "{{ statuscheck }}



    #- name: check date
    #  command: date
    #  register: out


    #- debug: msg={{out.stdout}}
 
    #- pause: seconds=3

    #- name: Start WEX Cralwer
    #  shell: |
    #    . /opt/IBM/es/nodeinfo/esprofile 
    #    esadmin monitor getCollectionSearchMonitorStatus -cid Report
    #  register: statuscheck
      #until: 
      #  statuscheck.stdout.find("<Status>0</Status>") != -1 
      #until: >
      #  statuscheck.stdout[:332]    | regex_search('(?<=<Status>)(.*)(?=</Status>)') == "1" and 
      #  statuscheck.stdout[333:600] | regex_search('(?<=<Status>)(.*)(?=</Status>)') == "1" and 
      #  statuscheck.stdout[497:]    | regex_search('(?<=<Status>)(.*)(?=</Status>)') == "1"  
      #retries: 10
      #delay: 2

    #- name: WEX Crawling status
    #  debug: 
    #    msg: >
    #      "{{ statuscheck.stdout.find("<Status>0</Status>") }}

    ############################################################
    #{{ statuscheck.stdout | regex_search('(?<=<Status>)(.*)(?=</Status>)') }} 
    # {{ statuscheck.stdout[:332] | regex_search('(?<=<Status>)(.*)(?=</Status>)') }}
    # {{ statuscheck.stdout[333:900] | regex_search('(?<=<Status>)(.*)(?=</Status>)') }}
    # {{ statuscheck.stdout[800:] | regex_search('(?<=<Status>)(.*)(?=</Status>)') }}
    # "  
    #{{ statuscheck.stdout[:332] }}   {{ statuscheck.stdout[333:496] }}   {{ statuscheck.stdout[497:] }}
    ############################################################
    # WEX 서비스 성공여부 확인
    ############################################################
    #- name: check wex process
    #  shell: |
    #    . /opt/IBM/es/nodeinfo/esprofile 
    #    esadmin Main2.indexservice.node1 getIndexBuildStatusAll &&
    #    esadmin Main2.indexservice.node2 getIndexBuildStatusAll &&
    #    esadmin Main2.indexservice.node3 getIndexBuildStatusAll
    #  register: statuscheck
    #  ignore_errors: yes 
    #  until: >
    #    (statuscheck.stdout[:500] | 
    #    regex_search('(?<=indexBuildStatusDetail\":{\"status\":\")(.*)(?=\",\"numberOfDocumentUpserted)')
    #    == "WAITING") 
    #    and 
    #    (statuscheck.stdout[2500:4000] |
    #    regex_search('(?<=indexBuildStatusDetail\":{\"status\":\")(.*)(?=\",\"numberOfDocumentUpserted)')
    #    == "WAITING")
    #    and 
    #    (statuscheck.stdout[5500:7000] |
    #    regex_search('(?<=indexBuildStatusDetail\":{\"status\":\")(.*)(?=\",\"numberOfDocumentUpserted)')
    #    == "WAITING")
    #  retries: 10
    #  delay: 2

    #- name: WEX Process Start (SUCCEEDED)
    #  debug:
    #    msg: "{{ statuscheck.stdout }}"
        #msg: "{{ statuscheck.stdout[:500] | regex_search('(?<=indexBuildStatusDetail\":{\"status\":\")(.*)(?=\",\"numberOfDocumentUpserted)') }}"
        #msg: "{{ statuscheck.stdout[2500:4000] | regex_search('(?<=indexBuildStatusDetail\":{\"status\":\")(.*)(?=\",\"numberOfDocumentUpserted)') }}"
        #msg: "{{ statuscheck.stdout[5500:7000] | regex_search('(?<=indexBuildStatusDetail\":{\"status\":\")(.*)(?=\",\"numberOfDocumentUpserted)') }}"







#########################################################################################################
      #  msg: "{{ ansible_play_hosts | map('extract', hostvars, 'statuscheck') | map(attribute='stdout') | search('WAITING') | string | join }}"
        #msg: "{{ ansible_play_hosts | map('extract', hostvars, 'statuscheck') | map(attribute='stdout') | map('regex_search','(?<=indexBuildStatusDetail\":{\"status\":\")(.*)(?=\",\"numberOfDocumentUpserted)') | join }}"
      #run_once: yes
      #until: ansible_play_hosts | map('extract', hostvars, 'statuscheck') | map(attribute='stdout') | map('regex_search','(?<=indexBuildStatusDetail\":{\"status\":\")(.*)(?=\",\"numberOfDocumentUpserted)') | join == "WAITINGWAITINGWAITING"
      #retries: 10
      #delay: 2
    #  until: statuscheck.stdout == "3" 
    #    msg: "{{ statuscheck.stdout[159:292] }}"
    #    #msg: "{{ statuscheck.stdout_lines.1 | regex_search('(status)') }}"
    #  when: statuscheck.stdout == "3"

#########################################################################################################
    #- name: WEX Process Start (SUCCEEDED)
    #  debug:
    #    msg: "{{ ansible_play_hosts | map('extract', hostvars, 'statuscheck') | map(attribute='stdout') | map('regex_search','(?<=indexBuildStatusDetail\":)(.*)(?=,\"numberOfDocumentUpserted)') | map('regex_search','WAITING') | join }}"
    #  run_once: yes
    #  until: ansible_play_hosts | map('extract', hostvars, 'statuscheck') | map(attribute='stdout') | map('regex_search','(?<=indexBuildStatusDetail\":)(.*)(?=,\"numberOfDocumentUpserted)') | list  | map('regex_search','WAITING') | list | join == "WAITINGWAITINGWAITING"
    #  retries: 10
    #  delay: 2
    #  until: statuscheck.stdout == "3"
    #    msg: "{{ statuscheck.stdout[159:292] }}"
    #    #msg: "{{ statuscheck.stdout_lines.1 | regex_search('(status)') }}"
    #  when: statuscheck.stdout == "3"

    #- name: WEX Process Start (FAILED)
    #  debug:
    #    msg: "{{ statuscheck.stdout }}"
    #  failed_when: statuscheck.stdout != "3"
    #  #when: statuscheck.stdout != "3"


    ############################################################
    # 데이터 크롤링 상태 확인
    ############################################################
    #- name: WEX Crawling Status checking
    #  shell: |
    #    lsof +D /lcia/esadmin/export/|grep ExportLCIA_Main2_{{'%Y-%m-%d'|strftime((ansible_date_time.epoch|int)-(86400*1))}}|wc -l
    #  register: statuscheck
    #  until: statuscheck.stdout == "0"
    #  retries: 500
    #  delay: 2

    #- name: WEX Indexing Start status
    #  debug:
    #    msg: "{{ '%Y-%m-%d' | strftime( ( ansible_date_time.epoch | int ) - ( 86400 * 1 )  ) }}"

    

    #- name: Check on WEX Crawling Status
    #  async_status: jid={{ ansibleresult.ansible_job_id }}
    #  ignore_errors: True
    #  register: job_result
    #  until: job_result.finished
    #  retries: 120
    #  delay: 2

    #- name: WEX Crawling Status
    #  debug:
    #    msg: "{{ job_result.stdout }}"


    ############################################################
    # 데이터 크롤링 시작
    ############################################################
    #- name: Start WEX Crawling - session id read
    #  shell: cat /home/esadmin/ansible_wex/wex_session.dat
    #  register: session_items

    #- name: Start WEX Crawling
    #  shell: |
    #    . /opt/IBM/es/nodeinfo/esprofile
    #    eadmin {{ item }} sstartCrawl -options 3
    #  with_items: 
    #    - "{{ session_items.stdout_lines }}"
      #register: ansibleresult
      #async: 1200
      #poll: 0


        #. /opt/IBM/es/nodeinfo/esprofile
        #eadmin "{{ item }}" sstartCrawl -options 3
    #- name: Start WEX Crawling
    #  debug:
    #    var: "{{ item }}"
    #  with_items: 
    #    - "{{ session_items.stdout_lines }}"
   #  shell: echo {{ item }} 
   #   register: ansibleresult
   #   async: 1200
   #   poll: 0

   # - name: 'Check on WEX Indexing Start'
   #   async_status: jid={{ ansibleresult.ansible_job_id }}
   #   ignore_errors: True
   #   register: job_result
   #   until: job_result.finished
   #   retries: 120
   #   delay: 10

   # - name: WEX Indexing Start status
   #   debug:
   #     msg: "{{ job_result.stdout }}"


