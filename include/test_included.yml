---
- name: "{{ sessionid }} 의 변환 테스트 "
  shell: echo "TESTTESTTEST"
  register: statuscheck
  ignore_errors: yes
  when: sessionid | regex_replace('(\.[^.]*)') | string == "Main2" and sessionid | regex_replace('(\.[^.]*)') | string == "Main6"

- name: "{{ sessionid }} 수행결과"
  debug:
    msg:
      - "{{ statuscheck }}"
  when: sessionid | regex_replace('(\.[^.]*)') | string == "Main2" and sessionid | regex_replace('(\.[^.]*)') | string == "Main6"

############################################################
# WEX 크롤러 대상 파일 존재여부 확인
# EXIST : status == 2 & (CrawledRecords + UpdatedRecords) > 0
# PASS  : status != 2 & (CrawledRecords + UpdatedRecords) == 0
############################################################
#- name: "Check wex crawling session : {{ sessionid }} indexing file 존재여부 check "
#  shell: |
#    . /opt/IBM/es/nodeinfo/esprofile
#    esadmin {{ sessionid }} getCrawlSpaceStatusDetail -ts "jdbc:hive2://10.109.2.73:10000/lcia_sor;AuthMech=3" > /home/esadmin/ansible_wex/wex_idxcheck.log
#    /home/esadmin/ansible_wex/wex_indexbuild_check.py
#    cat /home/esadmin/ansible_wex/wex_idxcheck.dat
#  register: idxcheck

####################################
# READY(status==1) 상태일 경우 처리 
####################################
#- name: "Check wex crawling session : {{ sessionid }} indexing file 존재여부 check 2-1"
#  shell: |
#    . /opt/IBM/es/nodeinfo/esprofile
#    esadmin {{ sessionid }} getCrawlSpaceStatusDetail -ts "jdbc:hive2://10.109.2.73:10000/lcia_sor;AuthMech=3" > /home/esadmin/ansible_wex/wex_idxcheck.log
#    /home/esadmin/ansible_wex/wex_indexbuild_check.py
#    cat /home/esadmin/ansible_wex/wex_idxcheck.dat
#  register: idxfilecheck
#  ignore_errors: yes
#  until: >
#    idxfilecheck.stdout.find("EXIST") != -1 or idxfilecheck.stdout.find("PASS") != -1
#  retries: 3
#  delay: 1
#  when: idxcheck.stdout.find("READY") != -1  

####################################
# EXIST, PASS(status!=1,2) 상태일 경우 처리
####################################
#- name: "Check wex crawling session : {{ sessionid }} indexing file 존재여부 check 2-21"
#  shell: |
#    cat /home/esadmin/ansible_wex/wex_idxcheck.dat
#  register: idxfilecheck
#  ignore_errors: yes
#  when: idxcheck.stdout in ("PASS","EXIST")

#- name: "Check WEX Crawling session : {{ sessionid }} indexing  file 존재여부 check 2-3"
#  debug:
#    msg:
#      - "WEX Crawling session : {{ sessionid }} indexing  file 존재여부 check"
#      - "{{ idxfilecheck.stdout }}"
#      - "------------------------------"
#      - "  {{ lookup('pipe','date +%Y-%m-%d/%H:%M:%S') }}"

############################################################
# WEX 크롤러 시작 상태 확인
# Indexing 상태까지 대기
# 크롤링 대상 파일이 있으면 Indexing. 없으면 pass.
############################################################
#- name: "Check wex crawling session : {{ sessionid }} indexing start [1]"
#  shell: |
#    . /opt/IBM/es/nodeinfo/esprofile
#    esadmin {{ sessionid | regex_replace('(\.[^.]*)') | string }}.indexservice.node1 getIndexBuildStatusAll > /home/esadmin/ansible_wex/wex_idxstatus.log
#    esadmin {{ sessionid | regex_replace('(\.[^.]*)') | string }}.indexservice.node2 getIndexBuildStatusAll >> /home/esadmin/ansible_wex/wex_idxstatus.log
#    esadmin {{ sessionid | regex_replace('(\.[^.]*)') | string }}.indexservice.node3 getIndexBuildStatusAll >> /home/esadmin/ansible_wex/wex_idxstatus.log
#    /home/esadmin/ansible_wex/wex_indexbuild_status.py
#    cat /home/esadmin/ansible_wex/wex_idxstatus.dat
#  register: statuscheck
#  ignore_errors: yes
#  until: >
#    statuscheck.stdout.find("INDEXINGINDEXINGINDEXING") != -1
#  retries: 3
#  delay: 1
#  when: idxfilecheck.stdout.find("EXIST") != -1

#- name: "Check WEX Crawling session : {{ sessionid }}  indexing start status [1]"
#  debug:
#    msg:
#      - "WEX Crawling session : {{ sessionid }} indexing start status"
#      - "------------------------------"
#      - "  {{ lookup('pipe','date +%Y-%m-%d/%H:%M:%S') }}"
#      - "------------------------------"
#  when: idxfilecheck.stdout.find("EXIST") != -1

############################################################
# WEX 크롤러 시작 성공여부 확인
# Indexing에서 Waiting 상태로 바뀔때 까지 대기
# 크롤링 대상 파일이 있으면 Indexing. 없으면 pass.
############################################################
#- name: "Check wex crawling session : {{ sessionid }} (1)"
#  shell: |
#    . /opt/IBM/es/nodeinfo/esprofile
#    esadmin {{ sessionid | regex_replace('(\.[^.]*)') | string }}.indexservice.node1 getIndexBuildStatusAll > /home/esadmin/ansible_wex/wex_idxstatus.log
#    esadmin {{ sessionid | regex_replace('(\.[^.]*)') | string }}.indexservice.node2 getIndexBuildStatusAll >> /home/esadmin/ansible_wex/wex_idxstatus.log
#    esadmin {{ sessionid | regex_replace('(\.[^.]*)') | string }}.indexservice.node3 getIndexBuildStatusAll >> /home/esadmin/ansible_wex/wex_idxstatus.log
#    /home/esadmin/ansible_wex/wex_indexbuild_status.py
#    cat /home/esadmin/ansible_wex/wex_idxstatus.dat
#  register: statuscheck
#  ignore_errors: yes
#  until: >
#    statuscheck.stdout.find("WAITINGWAITINGWAITING") != -1
#  retries: 600
#  delay: 45
#  when: idxfilecheck.stdout.find("EXIST") != -1

#- name: "WEX Crawling session : {{ sessionid }} indexing result (1)"
#  debug:
#    msg:
#      - "WEX Crawling session : {{ sessionid }} indexing result (1)"
#      - "------------------------------"
#      - "  {{ lookup('pipe','date +%Y-%m-%d/%H:%M:%S') }}"
#      - "------------------------------"
#  when: idxfilecheck.stdout.find("EXIST") != -1

############################################################
# WEX 크롤러 시작 상태 확인
# Indexing 상태까지 대기
# 크롤링 대상 파일이 있으면 Indexing. 없으면 pass.
# 600초 (10분) 대기 에서 Indexing 상태를 체크하는 것으로 변경
#- pause: seconds=600
############################################################
#- name: "Check wex crawling session : {{ sessionid }} start [2]"
#  shell: |
#    . /opt/IBM/es/nodeinfo/esprofile
#    esadmin {{ sessionid | regex_replace('(\.[^.]*)') | string }}.indexservice.node1 getIndexBuildStatusAll > /home/esadmin/ansible_wex/wex_idxstatus.log
#    esadmin {{ sessionid | regex_replace('(\.[^.]*)') | string }}.indexservice.node2 getIndexBuildStatusAll >> /home/esadmin/ansible_wex/wex_idxstatus.log
#    esadmin {{ sessionid | regex_replace('(\.[^.]*)') | string }}.indexservice.node3 getIndexBuildStatusAll >> /home/esadmin/ansible_wex/wex_idxstatus.log
#    /home/esadmin/ansible_wex/wex_indexbuild_status.py
#    cat /home/esadmin/ansible_wex/wex_idxstatus.dat
#  register: statuscheck
#  ignore_errors: yes
#  until: >
#    statuscheck.stdout.find("INDEXINGINDEXINGINDEXING") != -1
#  retries: 3
#  delay: 1
#  when: idxfilecheck.stdout.find("EXIST") != -1

#- name: "Check wex crawling session : {{ sessionid }} indexing start [2]"
#  debug:
#    msg:
#      - "WEX Crawling session : {{ sessionid }} indexing start status [2]"
#      - "------------------------------"
#      - "  {{ lookup('pipe','date +%Y-%m-%d/%H:%M:%S') }}"
#      - "------------------------------"
#  when: idxfilecheck.stdout.find("EXIST") != -1

############################################################
# Waiting 상태까지 대기
# WEX 크롤러 종료 후 자동 재시작을 확인하기 위한 작업
# Indexing에서 Waiting 상태로 바뀔때 까지 대기
# 정상이면 종료, 진행중이면 끝날때까지 대기
############################################################
#- name: "check wex process {{ sessionid }} (2)"
#  shell: |
#    . /opt/IBM/es/nodeinfo/esprofile
#    esadmin {{ sessionid | regex_replace('(\.[^.]*)') | string }}.indexservice.node1 getIndexBuildStatusAll > /home/esadmin/ansible_wex/wex_idxstatus.log
#    esadmin {{ sessionid | regex_replace('(\.[^.]*)') | string }}.indexservice.node2 getIndexBuildStatusAll >> /home/esadmin/ansible_wex/wex_idxstatus.log
#    esadmin {{ sessionid | regex_replace('(\.[^.]*)') | string }}.indexservice.node3 getIndexBuildStatusAll >> /home/esadmin/ansible_wex/wex_idxstatus.log
#    /home/esadmin/ansible_wex/wex_indexbuild_status.py
#    cat /home/esadmin/ansible_wex/wex_idxstatus.dat
#  register: statuscheck
#  ignore_errors: yes
#  until: >
#    statuscheck.stdout.find("WAITINGWAITINGWAITING") != -1
#  retries: 600
#  delay: 45
#  when: idxfilecheck.stdout.find("EXIST") != -1

#- name: "WEX Crawling session : {{ sessionid }} indexing result status(2)"
#  debug:
#    msg:
#      - "WEX Crawling session : {{ sessionid }} indexing result (2)"
#      - "------------------------------"
#      - "  {{ lookup('pipe','date +%Y-%m-%d/%H:%M:%S') }}"
#      - "------------------------------"
#  when: idxfilecheck.stdout.find("EXIST") != -1
###################################################################################
#- name: "Checking DateTime"
#  debug:
#    msg: "{{ reloaddate }}"

#- name: " {{ sessionid }} Indexer 초기화 1 "
#  shell: date
#  register: statuscheck
#  ignore_errors: true
#  when: sessionid | regex_replace('(\.[^.]*)') | string == "Main2" 
#
#- name: " {{ sessionid }} Indexer 초기화 2 "
#  shell: ls  
#  register: statuscheck  
#  until: statuscheck.stdout.find("ansible_wex") != -1
#  retries: 2 
#  delay: 1
#  ignore_errors: true
#  when: sessionid | regex_replace('(\.[^.]*)') | string == "Main2" and 
#        statuscheck.stdout.find("Jun") != -1                       and
#        reloaddate == '20180601'

#- name: "Checking Parser / Search status"
#  debug:
#    msg: "{{ statuscheck.stdout_lines }}"
#  when: statuscheck.stdout is defined

#   . /opt/IBM/es/nodeinfo/esprofile
#    sh /home/esadmin/bin/reset_index.sh
